{
	"info": {
		"_postman_id": "8fd49335-01c9-4e21-a491-50ce1debdacf",
		"name": "L3 Miage Library API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25623579"
	},
	"item": [
		{
			"name": "Create a random author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Author is created\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist;",
							"    pm.collectionVariables.set(\"authorId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"fullName\": \"{{$randomFullName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "In case the author could not be validated",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create an actual author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Author is created\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist;",
							"    pm.collectionVariables.set(\"authorId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"fullName\": \"Victor Hugo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "In case the author could not be validated",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create a new author (error)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Error creating author\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"fullName\": \" \"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "In case the author could not be validated",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get an author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can get an author\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"authorId\"));",
							"    pm.expect(jsonData.fullName).to.eql(\"Victor Hugo\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get an author (error)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can't get an author\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/123456789",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"123456789"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get all authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all authors\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).length.is.gte(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Update an author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update an author\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"authorId\"));",
							"    pm.expect(jsonData.fullName).to.eql(\"William Gibson\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"fullName\": \"William Gibson\",\n  \"id\": {{authorId}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}"
					]
				},
				"description": "Will update the author if found"
			},
			"response": [
				{
					"name": "Updated",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "In case the author could not be validated",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete an author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete an author\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/-1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"-1"
					]
				},
				"description": "Will update the author if found"
			},
			"response": [
				{
					"name": "Updated",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "In case the author could not be validated",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create a new book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create a new book\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist;",
							"    pm.expect(jsonData.authors).exist;",
							"    pm.expect(jsonData.authors).instanceOf(Array);",
							"    pm.expect(jsonData.authors).length.gte(0);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Peripheral\",\n  \"isbn\": 5343554574354,\n  \"publisher\": \"Folio\",\n  \"year\": 2014,\n  \"language\": \"english\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create a new book (id will be saved)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create a new book without language\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist;",
							"    pm.expect(jsonData.language).is.eq(\"french\");",
							"    pm.expect(jsonData.authors).exist;",
							"    pm.expect(jsonData.authors).length.is.gte(0);",
							"    pm.collectionVariables.set(\"bookId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.unset(\"bookId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Identification Des Schemas\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Folio\",\n  \"year\": 2008\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create a new book (ERR: no title)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can't create a book\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"french\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create a new book (ERR: wrong language)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can't create a book\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"la javanaise\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"javanais\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create a new book (ERR: wrong isbn)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can't create a book\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Les Inconnus\",\n  \"isbn\": 2,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"french\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create a new book (ERR: wrong year)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can't create a book\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Perdi dans le temps\",\n  \"isbn\": 12345648685,\n  \"publisher\": \"Pocket\",\n  \"year\": 10000,\n  \"language\": \"french\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create a new book (ERR: author not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can't create a book\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Peripheral\",\n  \"isbn\": 5343574354,\n  \"publisher\": \"Folio\",\n  \"year\": 2014,\n  \"language\": \"french\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/123456789/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"123456789",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get a book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can get a book\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.title).to.eql(\"Identification Des Schemas\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/books/{{bookId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"books",
						"{{bookId}}"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/books/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"books",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Book's id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": -65153870,\n    \"title\": \"aute\",\n    \"year\": 59278038,\n    \"isbn\": 6751990,\n    \"publisher\": \"officia Excepteur quis\",\n    \"language\": \"FRENCH\",\n    \"authors\": [\n      {\n        \"fullName\": \"minim ullamco sit officia\",\n        \"id\": -59262819\n      },\n      {\n        \"fullName\": \"dolor ullamco qui sit\",\n        \"id\": -20835849\n      }\n    ]\n  },\n  {\n    \"id\": -76560112,\n    \"title\": \"incididunt eiusmod officia Ut\",\n    \"year\": -19003349,\n    \"isbn\": 45233906,\n    \"publisher\": \"voluptate amet\",\n    \"language\": \"FRENCH\",\n    \"authors\": [\n      {\n        \"fullName\": \"et id\",\n        \"id\": -56823845\n      },\n      {\n        \"fullName\": \"ullamco consecte\",\n        \"id\": -29486150\n      }\n    ]\n  }\n]"
				},
				{
					"name": "The book was not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/books/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"books",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Book's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Update a book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update a book\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.title).to.eql(\"Identification des Schémas\");",
							"    pm.expect(jsonData.isbn).to.eql(2846260729);",
							"    pm.expect(jsonData.publisher).to.eql(\"Au diable vauvert\");",
							"    pm.expect(jsonData.year).to.eql(2004);",
							"    pm.expect(jsonData.authors.length).is.eq(1)",
							"    pm.expect(jsonData.authors[0].id).to.eql(pm.collectionVariables.get(\"authorId\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": {{bookId}},\n  \"title\": \"Identification des Schémas\",\n  \"isbn\": 2846260729,\n  \"publisher\": \"Au diable vauvert\",\n  \"year\": 2004\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/books/{{bookId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"books",
						"{{bookId}}"
					]
				}
			},
			"response": [
				{
					"name": "The book was not found",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/books/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"books",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Book's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Update a book id mismatch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update a book\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 123456789,\n  \"title\": \"Identification des Schémas\",\n  \"isbn\": 2846260729,\n  \"publisher\": \"Au diable vauvert\",\n  \"year\": 2004\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/books/{{bookId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"books",
						"{{bookId}}"
					]
				}
			},
			"response": [
				{
					"name": "The book was not found",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/books/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"books",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Book's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get all books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can get an author\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).is.gte(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"books"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 23002528,\n  \"title\": \"magna\",\n  \"year\": 77654806,\n  \"isbn\": -29087595,\n  \"publisher\": \"ut consequat deserunt tempor pariatur\",\n  \"language\": \"FRENCH\",\n  \"authors\": [\n    {\n      \"fullName\": \"proident\",\n      \"id\": -72227805\n    },\n    {\n      \"fullName\": \"aliqua nisi\",\n      \"id\": 74538000\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Create a new book for a given author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create a new book\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist;",
							"    pm.expect(jsonData.authors).exist;",
							"    pm.expect(jsonData.authors).instanceOf(Array);",
							"    pm.expect(jsonData.authors).length.gte(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Peripheral 2\",\n  \"isbn\": 5343635574354,\n  \"publisher\": \"Folio\",\n  \"year\": 2022,\n  \"language\": \"english\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get all books containing 'peripheral'",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can get an author\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).is.gte(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/books?q=peripheral",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"books"
					],
					"query": [
						{
							"key": "q",
							"value": "peripheral"
						}
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"books"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 23002528,\n  \"title\": \"magna\",\n  \"year\": 77654806,\n  \"isbn\": -29087595,\n  \"publisher\": \"ut consequat deserunt tempor pariatur\",\n  \"language\": \"FRENCH\",\n  \"authors\": [\n    {\n      \"fullName\": \"proident\",\n      \"id\": -72227805\n    },\n    {\n      \"fullName\": \"aliqua nisi\",\n      \"id\": 74538000\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Create a random author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Author is created\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist;",
							"    pm.collectionVariables.set(\"authorId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"fullName\": \"{{$randomFullName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "In case the author could not be validated",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create a new book for new author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create a new book\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist;",
							"    pm.expect(jsonData.authors).exist;",
							"    pm.expect(jsonData.authors).instanceOf(Array);",
							"    pm.expect(jsonData.authors).length.gte(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"{{$randomCatchPhrase}}\",\n  \"isbn\": 101010101010,\n  \"publisher\": \"Pinguin\",\n  \"year\": 2020,\n  \"language\": \"english\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create a second book for new author (save id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create a new book\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist;",
							"    pm.expect(jsonData.authors).exist;",
							"    pm.expect(jsonData.authors).instanceOf(Array);",
							"    pm.expect(jsonData.authors).length.gte(0);",
							"    pm.collectionVariables.set(\"newBookId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"{{$randomCatchPhrase}}\",\n  \"isbn\": 546378356384,\n  \"publisher\": \"Pinguin\",\n  \"year\": 2020,\n  \"language\": \"english\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -14354030,\n  \"title\": \"minim velit\",\n  \"year\": 32340199,\n  \"isbn\": -68254468,\n  \"publisher\": \"adipisicing\",\n  \"language\": \"FRENCH\"\n}"
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Les Misérables\",\n  \"isbn\": 9782266199261,\n  \"publisher\": \"Pocket\",\n  \"year\": 2009,\n  \"language\": \"FRENCH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id",
								"books"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get all books for new author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can get an author\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).is.eq(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{authorId}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{authorId}}",
						"books"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"books"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 23002528,\n  \"title\": \"magna\",\n  \"year\": 77654806,\n  \"isbn\": -29087595,\n  \"publisher\": \"ut consequat deserunt tempor pariatur\",\n  \"language\": \"FRENCH\",\n  \"authors\": [\n    {\n      \"fullName\": \"proident\",\n      \"id\": -72227805\n    },\n    {\n      \"fullName\": \"aliqua nisi\",\n      \"id\": 74538000\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Create a new random author (save id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Author is created\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist;",
							"    pm.collectionVariables.set(\"newAuthorId\", jsonData.id);",
							"    pm.collectionVariables.set(\"newAuthorName\", jsonData.fullName);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"fullName\": \"{{$randomFullName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "In case the author could not be validated",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Add an author to second book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Author is created\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).exist;",
							"    pm.expect(jsonData.authors).exist;",
							"    pm.expect(jsonData.authors.length).is.eq(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": {{newAuthorId}},\n  \"fullName\": \"{{newAuthorName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/books/{{newBookId}}/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"books",
						"{{newBookId}}",
						"authors"
					]
				}
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "In case the author could not be validated",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"velit sed quis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete last author: ERR have books with several authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete an author\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/authors/{{newAuthorId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"authors",
						"{{newAuthorId}}"
					]
				},
				"description": "Will update the author if found"
			},
			"response": [
				{
					"name": "Updated",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "In case the author could not be validated",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete second book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete an author\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/books/{{newBookId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api", "v1",
						"books",
						"{{newBookId}}"
					]
				},
				"description": "Will update the author if found"
			},
			"response": [
				{
					"name": "Updated",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}"
				},
				{
					"name": "In case the author could not be validated",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "The author was not found",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"culpa Excepteur sunt dolor voluptate\",\n  \"id\": -63365530\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/authors/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api", "v1",
								"authors",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-90715985.49614279",
									"description": "(Required) Author's id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}